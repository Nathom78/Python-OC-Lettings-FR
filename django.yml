## This config was automatically generated from your source code
## Stacks detected: deps:python:.,file:manage.py:.
#version: 2.1
#orbs:
#  python: circleci/python@2.0.3
#jobs:
#  test-python:
#    # Install dependencies and run tests
#    docker:
#      - image: cimg/python:3.8-node
#    # executor: python/default # use the default executor defined within the orb
#    steps:
#      - checkout
#      - python/install-packages
#      - run:
#          name: Run tests
#          command:
#            .env/script/activate
#            pytest --html=reports/junit/report.html
#            pytest --junitxml=reports/junit/junit.xml
#
#      - store_test_results:
#          path: reports
#  deploy:
#    # This is an example deploy job, not actually used by the workflow
#    docker:
#      - image: cimg/base:stable
#    steps:
#      # Replace this with steps to deploy to users
#      - run:
#          name: deploy
#          command: '#e.g. ./deploy.sh'
#workflows:
#  build-and-test:
#    jobs:
#      - test-python
#      - deploy:
#         requires:
#           - test-python


name: Python application

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --html=reports/junit/report.html
        pytest --junitxml=reports/junit/junit.xml
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'

workflows:
  build-and-test:
    jobs:
      - Lint with flake8
      - Test with pytest
      - Build the Docker image
      - deploy:
         requires:
           - Test with pytest
