name: Tests with pytest, Flake8, and Coverage.

on: workflow_call

jobs:
  build:
      name: Tests.
      runs-on: ubuntu-latest

      steps:
        - name: Extract branch name
          id: extract_branch
          shell: bash
          run: echo "branch=${GITHUB_REF#refs/heads/}" >> "${GITHUB_OUTPUT}"

        - uses: actions/checkout@v4
          # Can use files setup.cfg, and requirements.txt on the branch of the test

        - name: Set up Python 3.11
          uses: actions/setup-python@v4
          with:
            python-version: "3.11"
            cache: 'pip'

        - name: Install dependencies.
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        - name: Install dependencies2.
          run: |
            if [ -f reports/requirements.txt ]; then pip install -r reports/requirements.txt; fi

        - name: Lint with flake8.
          # stop the build if there are Python syntax errors or undefined names, and make a report.
          run: |
            flake8 --count --output-file=reports/flake8/flake8stats.txt

        - name: Test with pytest.
          env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            # stop the build if there are fell tests, and make reports.
          run: |
            pytest --junitxml=reports/junit/junit.xml --html=reports/junit/report.html

        - name: Test with Coverage.
          env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            # stop the build if there isn't 80% code covered by tests.
          run: |
            coverage run -m pytest
            coverage report --data-file=reports/coverage/.coverage
            coverage xml --data-file=reports/coverage/.coverage
            coverage html --data-file=reports/coverage/.coverage

        - name: Create all badges
          run: |
            genbadge tests -o reports/tests-badge.svg
            genbadge coverage -o reports/coverage-badge.svg
            genbadge flake8 -o reports/flake8-badge.svg

        - name: Archive tests results.
          uses: actions/upload-artifact@v3
          with:
            name: tests-reports
            path: reports/
            if-no-files-found: error

        - name: backup report
          env:
            NEW_REP: ${{ steps.extract_branch.outputs.branch }}
          run: |
            cd ..
            dir
            mkdir -p -v ${NEW_REP}
            cd ${NEW_REP}
            mkdir -p -v reports
            cd ..
            cp -r -v Python-OC-Lettings-FR/reports ${NEW_REP}
            cd Python-OC-Lettings-FR

        - name: checkout to branch badges
          uses: actions/checkout@v4
          with:
            ref: 'badges'

        - name: copy reports
          env:
            NEW_REP: ${{ steps.extract_branch.outputs.branch }}
          run: |
            rm -r ${NEW_REP}
            mkdir -p -v ${NEW_REP}
            cd ${NEW_REP}
            mkdir -p -v reports
            cd ..
            cd ..
            cp -r -v ${NEW_REP} Python-OC-Lettings-FR
            cd Python-OC-Lettings-FR

        - name: Commit result and push
          env:
            NEW_REP: ${{ steps.extract_branch.outputs.branch }}
          run: |
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add "${NEW_REP}/"
            git commit -m "Add/Update badge"
            git push
