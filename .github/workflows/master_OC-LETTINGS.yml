#
name: Build and deploy container app to Azure Web App - OC-LETTINGS

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['master']

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  job_1:
      name: Tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Set up Python 3.11
          uses: actions/setup-python@v4
          with:
            python-version: "3.11"
            cache: 'pip'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Lint with flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 --exit-zero --format=html --htmldir ./reports/flake8 --max-line-length=99 --statistics --tee --output-file ./reports/flake8/flake8stats.txt
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with pytest
          env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
          run: |
            pytest --html=reports/junit/report.html
            pytest --junitxml=reports/junit/junit.xml
        - name: Archive tests results results
          uses: actions/upload-artifact@v3
          with:
            name: tests-reports
            path: reports/

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
  push_to_registries:
    name: Push Docker image to multiple registries
    needs: job_1
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55
      # So now you can use Actions' own caching!

      - name: Log in to Docker Hub
        uses: docker/login-action@553b6f090f15b58451081ce157ff1929a266131d
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@553b6f090f15b58451081ce157ff1929a266131d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@0f8c876bafbf5dbce05c36682ec68e9a0274a48a
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
            ghcr.io/${{ github.repository }}
      - name: Build and push Docker images
        uses: docker/build-push-action@9311bf5263ae5b36f3ec67aff768790c6e2344ad
        with:
          context: .
          build-args: |
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DSN=${{ secrets.DSN }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  deploy to Azure:
#    name: Deploy App to Azure
#    needs: job_2
#    build:
#      runs-on: 'ubuntu-latest'
#
#      steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to registry
#        uses: docker/login-action@v2
#        with:
#          registry: https://index.docker.io/v1/
#          username: ${{ secrets.AzureAppService_ContainerUsername_c7553e14ce2743709ebb29d4c98085b4 }}
#          password: ${{ secrets.AzureAppService_ContainerPassword_a2780b0a51784151a5862a129916bde6 }}
#
#      - name: Build and push container image to registry
#        uses: docker/build-push-action@v3
#        with:
#          push: true
#          tags: index.docker.io/${{ secrets.AzureAppService_ContainerUsername_c7553e14ce2743709ebb29d4c98085b4 }}/arteymis78/azure_oc_lettings:${{ github.sha }}
#          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: push_to_registries
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'OC-LETTINGS'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_c371cb015c6a4a38b5925a917f5f0f01 }}
        images: 'index.docker.io/${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ steps.meta.outputs.tags }}'

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
# https://github.com/docker/metadata-action


